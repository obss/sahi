[project]
name = "sahi"
dynamic = ["version"]
readme = "README.md"
description = "A vision library for performing sliced inference on large images/small objects"
requires-python = ">=3.8"
license = "MIT"
license-files = ["./LICENSE"]
dependencies = [
  "opencv-python<=4.11.0.86",
  "shapely>=2.0.0",
  "tqdm>=4.48.2",
  "pillow>=8.2.0",
  "pybboxes==0.1.6",
  "pyyaml",
  "fire",
  "terminaltables",
  "requests",
  "click",
]
classifiers = [
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Intended Audience :: Developers",
  "Intended Audience :: Science/Research",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Topic :: Software Development :: Libraries",
  "Topic :: Software Development :: Libraries :: Python Modules",
]
maintainers = [
  { name = "Fatih Cagatay Akyon (@fcakyon)" },
]

[project.urls]
"Homepage" = "https://github.com/obss/sahi"
"Source" = "https://github.com/obss/sahi"
"Documentation" = "https://github.com/obss/sahi/tree/main/docs"
"Bug Reports" = "https://github.com/obss/sahi/discussions/categories/q-a"
"Changelog" = "https://github.com/obss/sahi/releases"

[project.scripts]
sahi = "sahi.cli:app"

[project.optional-dependencies]
dev = [
  "pytest",
  "pytest-xdist[psutil]>=3.0",
  "ruff",
  "jupyterlab>=3.0.14",
]
ci = [
  # Constrain numpy for Python <3.12 due to torch 2.1.2 compatibility
  "numpy<2.0;python_version<'3.12'",
  # pytorch should be present for all python versions
  # CPU versions for Linux/Windows CI
  "torch==2.6.0+cpu;python_version>='3.12' and platform_system!='Darwin'",
  "torchvision==0.21.0+cpu;python_version>='3.12' and platform_system!='Darwin'",
  "torch==2.1.2+cpu;python_version<'3.12' and platform_system!='Darwin'",
  "torchvision==0.16.2+cpu;python_version<'3.12' and platform_system!='Darwin'",
  # Regular versions for macOS
  "torch==2.6.0;python_version>='3.12' and platform_system=='Darwin'",
  "torchvision==0.21.0;python_version>='3.12' and platform_system=='Darwin'",
  "torch==2.1.2;python_version<'3.12' and platform_system=='Darwin'",
  "torchvision==0.16.2;python_version<'3.12' and platform_system=='Darwin'",
  # mmdet is supported for python<3.12 and NOT on macOS ARM64
  "mmengine;python_version<'3.12' and (platform_system!='Darwin' or platform_machine!='arm64')",
  "mmcv==2.1.0;python_version<'3.12' and (platform_system!='Darwin' or platform_machine!='arm64')",
  "mmdet==3.3.0;python_version<'3.12' and (platform_system!='Darwin' or platform_machine!='arm64')",
  "onnxruntime<1.20;python_version<'3.12'",
  "onnx>1.16;python_version>='3.12'",
  "onnxruntime;python_version>='3.12'",
  # transformers is supported for python>=3.9 (no numpy 2.0 requirement)
  "transformers>=4.49.0;python_version>='3.9'",
  # inference and rfdetr require numpy>=2.0, incompatible with torch 2.1.2
  # Only install for Python 3.12+ where we use torch 2.6.0
  "inference>=0.50.3;python_version>='3.12'",
  "rfdetr>=1.1.0;python_version>='3.12'",
  # These are available for all python versions
  "pycocotools>=2.0.7",
  "ultralytics>=8.3.86",
  "scikit-image",
  "fiftyone",
]

[tool.uv]
find-links = [
  "https://download.openmmlab.com/mmcv/dist/cpu/torch2.1.0/index.html",
]

[[tool.uv.index]]
name = "pytorch-cpu"
url = "https://download.pytorch.org/whl/cpu"
explicit = true

[tool.uv.sources]
torch = [{ index = "pytorch-cpu" }]
torchvision = [{ index = "pytorch-cpu" }]

[tool.hatch.version]
path = "sahi/__init__.py"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.ruff]
line-length = 120
exclude = ["**/__init__.py", ".git", "__pycache__", "*.ipynb"]

[tool.ruff.lint]
select = ["E", "F", "I"]
ignore = ["E501"]  # line too long

[tool.ruff.format]
quote-style = "double"
indent-style = "space"

[tool.pytest.ini_options]
minversion = "6.0"
addopts = ["--import-mode=importlib", "--no-header"]
pythonpath = ["."]

[tool.typos.default]
extend-ignore-identifiers-re = ["fo"]